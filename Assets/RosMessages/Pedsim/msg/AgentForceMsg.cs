//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Pedsim
{
    [Serializable]
    public class AgentForceMsg : Message
    {
        public const string k_RosMessageName = "pedsim_msgs/AgentForce";
        public override string RosMessageName => k_RosMessageName;

        //  Forces acting on an agent.
        //  Basic SFM forces.
        public Geometry.Vector3Msg desired_force;
        public Geometry.Vector3Msg obstacle_force;
        public Geometry.Vector3Msg social_force;
        //  Additional Group Forces
        public Geometry.Vector3Msg group_coherence_force;
        public Geometry.Vector3Msg group_gaze_force;
        public Geometry.Vector3Msg group_repulsion_force;
        //  Extra stabilization/custom forces.
        public Geometry.Vector3Msg random_force;

        public AgentForceMsg()
        {
            this.desired_force = new Geometry.Vector3Msg();
            this.obstacle_force = new Geometry.Vector3Msg();
            this.social_force = new Geometry.Vector3Msg();
            this.group_coherence_force = new Geometry.Vector3Msg();
            this.group_gaze_force = new Geometry.Vector3Msg();
            this.group_repulsion_force = new Geometry.Vector3Msg();
            this.random_force = new Geometry.Vector3Msg();
        }

        public AgentForceMsg(Geometry.Vector3Msg desired_force, Geometry.Vector3Msg obstacle_force, Geometry.Vector3Msg social_force, Geometry.Vector3Msg group_coherence_force, Geometry.Vector3Msg group_gaze_force, Geometry.Vector3Msg group_repulsion_force, Geometry.Vector3Msg random_force)
        {
            this.desired_force = desired_force;
            this.obstacle_force = obstacle_force;
            this.social_force = social_force;
            this.group_coherence_force = group_coherence_force;
            this.group_gaze_force = group_gaze_force;
            this.group_repulsion_force = group_repulsion_force;
            this.random_force = random_force;
        }

        public static AgentForceMsg Deserialize(MessageDeserializer deserializer) => new AgentForceMsg(deserializer);

        private AgentForceMsg(MessageDeserializer deserializer)
        {
            this.desired_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.obstacle_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.social_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.group_coherence_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.group_gaze_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.group_repulsion_force = Geometry.Vector3Msg.Deserialize(deserializer);
            this.random_force = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.desired_force);
            serializer.Write(this.obstacle_force);
            serializer.Write(this.social_force);
            serializer.Write(this.group_coherence_force);
            serializer.Write(this.group_gaze_force);
            serializer.Write(this.group_repulsion_force);
            serializer.Write(this.random_force);
        }

        public override string ToString()
        {
            return "AgentForceMsg: " +
            "\ndesired_force: " + desired_force.ToString() +
            "\nobstacle_force: " + obstacle_force.ToString() +
            "\nsocial_force: " + social_force.ToString() +
            "\ngroup_coherence_force: " + group_coherence_force.ToString() +
            "\ngroup_gaze_force: " + group_gaze_force.ToString() +
            "\ngroup_repulsion_force: " + group_repulsion_force.ToString() +
            "\nrandom_force: " + random_force.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
