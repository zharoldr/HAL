//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Pedsim
{
    [Serializable]
    public class AgentStateMsg : Message
    {
        public const string k_RosMessageName = "pedsim_msgs/AgentState";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        public ulong id;
        public ushort type;
        public Geometry.PoseMsg pose;
        public Geometry.TwistMsg twist;
        public Geometry.PointMsg goal;
        //  Agent types
        //  0, 1 -> ordinary agents
        //  2 -> Robot
        //  3 -> standing/elderly agents
        public AgentForceMsg forces;

        public AgentStateMsg()
        {
            this.header = new HeaderMsg();
            this.id = 0;
            this.type = 0;
            this.pose = new Geometry.PoseMsg();
            this.twist = new Geometry.TwistMsg();
            this.goal = new Geometry.PointMsg();
            this.forces = new AgentForceMsg();
        }

        public AgentStateMsg(HeaderMsg header, ulong id, ushort type, Geometry.PoseMsg pose, Geometry.TwistMsg twist, Geometry.PointMsg goal, AgentForceMsg forces)
        {
            this.header = header;
            this.id = id;
            this.type = type;
            this.pose = pose;
            this.twist = twist;
            this.goal = goal;
            this.forces = forces;
        }

        public static AgentStateMsg Deserialize(MessageDeserializer deserializer) => new AgentStateMsg(deserializer);

        private AgentStateMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.id);
            deserializer.Read(out this.type);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.twist = Geometry.TwistMsg.Deserialize(deserializer);
            this.goal = Geometry.PointMsg.Deserialize(deserializer);
            this.forces = AgentForceMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.id);
            serializer.Write(this.type);
            serializer.Write(this.pose);
            serializer.Write(this.twist);
            serializer.Write(this.goal);
            serializer.Write(this.forces);
        }

        public override string ToString()
        {
            return "AgentStateMsg: " +
            "\nheader: " + header.ToString() +
            "\nid: " + id.ToString() +
            "\ntype: " + type.ToString() +
            "\npose: " + pose.ToString() +
            "\ntwist: " + twist.ToString() +
            "\ngoal: " + goal.ToString() +
            "\nforces: " + forces.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
